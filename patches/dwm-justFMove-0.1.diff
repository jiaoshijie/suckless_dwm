# made by jsj

diff --git a/config.def.h b/config.def.h
index 2a26e1f..a314781 100644
--- a/config.def.h
+++ b/config.def.h
@@ -132,6 +132,11 @@ static Key keys[] = {
   // { MODKEY,                       XK_u,      setlayout,      {.v = &layouts[2]} },
   // { MODKEY,                       XK_space,  setlayout,      {0} },  // 在最近的两个layout之间交换
 
+  { MODKEY | ShiftMask,    XK_j,      justFMove,     {.v = "0x 25y" } },  // move
+  { MODKEY | ShiftMask,    XK_k,      justFMove,     {.v = "0x -25y" } },
+  { MODKEY | ShiftMask,    XK_l,      justFMove,     {.v = "25x 0y" } },
+  { MODKEY | ShiftMask,    XK_h,      justFMove,     {.v = "-25x 0y" } },
+
   {MODKEY, XK_s,      spawn,          SHCMD("~/dotfiles/my_script/tray_toggle.sh")},
 
   // NOTE: 多显示器(monitor)
diff --git a/dwm.c b/dwm.c
index a96f33c..c2aa632 100644
--- a/dwm.c
+++ b/dwm.c
@@ -183,6 +183,7 @@ static void mappingnotify(XEvent *e);
 static void maprequest(XEvent *e);
 static void monocle(Monitor *m);
 static void motionnotify(XEvent *e);
+static void justFMove(const Arg *arg);
 static void movemouse(const Arg *arg);
 static Client *nexttiled(Client *c);
 static void pop(Client *);
@@ -1196,6 +1197,65 @@ movemouse(const Arg *arg)
 	}
 }
 
+void
+justFMove(const Arg *arg) {
+	/* only floating windows can be moved */
+	Client *c;
+	c = selmon->sel;
+	int x, y, nx, ny, ox, oy, ow, oh;
+	char xAbs, yAbs;
+	int msx, msy, dx, dy, nmx, nmy;
+	unsigned int dui;
+	Window dummy;
+
+	if (!c || !arg)
+		return;
+	if (selmon->lt[selmon->sellt]->arrange && !c->isfloating)
+		return;
+	if (sscanf((char *)arg->v, "%d%c %d%c", &x, &xAbs, &y, &yAbs) != 4)
+		return;
+
+	/* compute new window position; prevent window from be positioned outside the current monitor */
+	nx = c->x + x;
+	if (xAbs == 'X') {
+		if (x < selmon->mx)
+			nx = selmon->mx;
+		else if (x > selmon->mx + selmon->mw)
+			nx = selmon->mx + selmon->mw - c->w - 2 * c->bw;
+		else
+			nx = x;
+	}
+
+	ny = c->y + y;
+	if (yAbs == 'Y') {
+		if (y < selmon->my)
+			ny = selmon->my;
+		else if (y > selmon->my + selmon->mh)
+			ny = selmon->my + selmon->mh - c->h - 2 * c->bw;
+		else
+			ny = y;
+	}
+
+	ox = c->x;
+	oy = c->y;
+	ow = c->w;
+	oh = c->h;
+
+	XRaiseWindow(dpy, c->win);
+	Bool xqp = XQueryPointer(dpy, root, &dummy, &dummy, &msx, &msy, &dx, &dy, &dui);
+	resize(c, nx, ny, ow, oh, True);
+
+	/* move cursor along with the window to avoid problems caused by the sloppy focus */
+	if (xqp && ox <= msx && (ox + ow) >= msx && oy <= msy && (oy + oh) >= msy)
+	{
+		nmx = c->x - ox + c->w - ow;
+		nmy = c->y - oy + c->h - oh;
+		/* make sure the cursor stays inside the window */
+		if ((msx + nmx) > c->x && (msy + nmy) > c->y)
+			XWarpPointer(dpy, None, None, 0, 0, 0, 0, nmx, nmy);
+	}
+}
+
 Client *
 nexttiled(Client *c)
 {
